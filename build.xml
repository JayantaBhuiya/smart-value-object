<?xml version="1.0"?>

<!DOCTYPE project [
    <!ENTITY properties SYSTEM "file:../properties.xml">
    <!ENTITY taskdef SYSTEM "file:../taskdef.xml">
]>

<!-- ===========================================================================
 | This is the build file for the Bright Side Remoting project.
 | The default task makes the distribution which consists in the client jar
 | and the server war.
 | Be carefull that to run the test tasks, you must have built the
 | bsf-ejb-commons.jar before.
 | The test are provided for JBoss 3.2.1 and JOnAS 3.3.
 |
 =========================================================================== -->
<project name="bsf-smartValueObject" default="default">

    <!-- import external XML fragments -->
    &properties;
    &taskdef;

    <property environment="myenv"/>

    <property name="jonas.root" value="${myenv.JONAS_ROOT}"/>

    <property name="name.short" value="SVO"/>
    <property name="file.client.jar" value="${dist.dir}/bsf-${name.short}-client.jar"/>


    <property name="test.jboss.name" value="test-jboss-SVO"/>
    <property name="test.jbos.app" location="${metadata.dir}/test-jboss-app.xml"/>


    <property name="test.jonas.name" value="test-jonas-SVO"/>
    <property name="test.jonas.app" location="${metadata.dir}/test-jonas-app.xml"/>

    <property name="demo.jboss.name" value="SVO-jboss-demo"/>
    <property name="demo.jboss.app" location="${metadata.dir}/SVO-jboss-demo.xml"/>

    <path id="hibernate.classpath">
        <pathelement location="${hibernate.jar}"/>
        <pathelement location="${dom4j.jar}"/>
        <pathelement location="${cglib.jar}"/>
        <pathelement location="${mysql-jdbc.jar}"/>
        <pathelement location="${odmg.jar}"/>
    </path>

    <path id="compile.classpath">
        <pathelement location="${j2ee.jar}"/>
        <!--         <pathelement location="${servlet.jar}"/> -->
        <!--         <pathelement location="${jbosssx.jar}"/> -->
        <pathelement location="${logging.jar}"/>
        <pathelement location="${build.dir}/test"/>
        <pathelement location="${javassist.jar}"/>
        <pathelement location="${ant.jar}"/>
        <pathelement location="${asm.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <!-- hibernate requirements -->
         <path refid="hibernate.classpath"/>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <pathelement location="${build.dir}/test"/>
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${bsf-commons-ejb.jar}"/>
        <pathelement location="${clover.jar}"/>
        <pathelement location="${hsqldb.jar}"/>
    </path>

    <path id="demo.classpath">
        <path refid="compile.classpath"/>
        <pathelement location="${build.dir}/test"/>
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${bsf-remote-client.jar}"/>
        <pathelement location="${bsf-commons-ejb.jar}"/>
        <pathelement location="${junit.jar}"/>
    </path>

    <!-- ================================================================== -->
    <!-- Public targets                                                     -->
    <!-- ================================================================== -->

    <target name="default" depends="dist"
        description="default : builds the jar."/>

    <target name="test" depends="compile,test-init,run-tests"/>

    <target name="docs" depends="javadocs"/>

    <!-- Public Targets -->
    <target name="clean"
        description="Deletes all files that are generated by the build.">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${javadoc.dir}"/>
        <delete>
            <fileset dir="${root.dir}">
                <include name="junit*.properties"/>
                <include name="result.xml"/>
            </fileset>
        </delete>
    </target>

    <target name="dist" depends="compile, jar-client"
        description="creates a distribution">
        <copy file="${javassist.jar}" todir="${dist.dir}"/>
        <copy file="${logging.jar}"   todir="${dist.dir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Private targets                                                    -->
    <!-- ================================================================== -->

    <target name="init">
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/test"/>
        <mkdir dir="${dist.dir}"/>
        <echo message="Building ${ant.project.name}"/>
    </target>

   <!-- =======================================================================
    | Compile :
    |   compile the source and copy the ressources
    |   to the classes dir
    ======================================================================== -->
    <target name="compile" depends="init">
        <property name="path.string" refid="compile.classpath"/>
        <echo message="${path.string}"/>
        <javac destdir="${build.dir}/classes"
            debug="${build.debug}"
            includeAntRuntime="false"
            srcdir="src/main">
            <classpath refid="compile.classpath"/>
        </javac>

        <copy todir="${build.dir}/classes">
            <fileset dir="src/main">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>


    <!-- =======================================================================
    | Jar-client :
    |   Build the client jar. This jar don't contains the
    |   specific Server classes
    ======================================================================== -->
    <target name="jar-client" depends="compile">
        <jar destfile="${file.client.jar}"
            basedir="${build.classes.dir}">
            <exclude name="**/*Server.class"/>
            <exclude name="**/JBoss*.class"/>
        </jar>
    </target>

    <!-- =======================================================================
    | javadocs :
    |   Generates the javadoc of the project.
    ======================================================================== -->
    <target name="javadocs" depends="compile" description="make the java docs">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc author="true"
            destdir="${javadoc.dir}"
            packagenames="org.bsf.smartValueObject.*"
            use="true"
            version="true"
            windowtitle="BSF Smart Value Object"
            private="true"
            >
            <classpath refid="compile.classpath"/>

            <fileset dir="src">
                <include name="main/**/*.java"/>
                <include name="test/**/demo/*.java"/>
            </fileset>
        </javadoc>
    </target>

    <!-- =======================================================================
    | Release :
    |   Makes a new release, copy it to the lib dir,
    |   zips the structure,
    ======================================================================== -->
    <target name="release" depends="dist, javadocs">
        <delete dir="${build.dir}"/>
        <ant dir="./example" target="clean"/>
        <zip destfile="${masterbuild.dir}/SmartValueObject-${svo.version}.zip">
            <zipfileset dir="${root.dir}" prefix="bsf-SVO"/>
        </zip>
    </target>

    <target name="test-init" depends="init">
        <mkdir dir="${build.dir}/test/"/>
        <mkdir dir="${test.data.dir}"/>

        <echo message="Building ${ant.project.name}"/>
    </target>

    <!-- =======================================================================
    | Compile :
    |   compile the test sources and copy the ressources
    |   to the classes dir.
    ======================================================================== -->
    <!-- <target name="test-compile" depends="with.clover,compile, test-init, test-ejbdoclet"> -->
    <target name="test-compile" depends="compile, test-init, demo-ejbdoclet">
        <javac destdir="${build.dir}/test"
            debug="${build.debug}"
            includeAntRuntime="false"
            srcdir="${src.dir}/test;${build.dir}/ejb">
            <classpath refid="test.classpath"/>
            <classpath refid="demo.classpath"/>
        </javac>
    </target>


    <!-- =======================================================================
    | test-dependency :
    |   Prepares the addition of the classes needed by the EJB.
    ======================================================================== -->
    <target name="test-dependency" depends="init">
        <unjar src="${bsf-commons-ejb.jar}" dest="build/test"/>
        <unjar src="${javassist.jar}" dest="build/test"/>
    </target>

    <!-- =======================================================================
    | run-tests:
    |   Runs the tests, and generates reports.
    ======================================================================== -->
    <target name="run-tests" depends="test-smartify, test-init, demo-hibernatedoclet">
        <junit printsummary="false"
            errorProperty="test.failed"
            failureProperty="test.failed"
            fork="true"
            >
            <classpath refid="test.classpath"/>
            <sysproperty key="org.apache.commons.logging.Log" value="org.apache.commons.logging.impl.SimpleLog"/>
            <formatter type="xml"/>
            <formatter type="brief" usefile="false"/>
            <!--        <test name="${testcase}" if="testcase"/>-->
            <batchtest todir="${test.data.dir}" unless="testcase">
                <fileset dir="${test.dir}" includes="**/Test*.class" excludes="**/TestVO.class"/>
            </batchtest>
        </junit>

        <junitreport todir="${test.data.dir}">
            <fileset dir="${test.data.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}"/>
        </junitreport>

        <fail message="Unit tests failed.  Check log or reports for details" if="test.failed"/>
    </target>

    <target name="test-smartify" depends="clean, test-compile">
        <taskdef name="smartify" classname="org.bsf.smartValueObject.tools.SmartTask"
            classpathref="test.classpath"/>

        <!-- <smartify instrumentor="org.bsf.smartValueObject.tools.JavaAssistInstrumentor"> -->
        <!-- <smartify instrumentor="org.bsf.smartValueObject.tools.ASMInstrumentor"> -->
        <smartify>
            <fileset dir="${build.dir}/test">
                <include name="**/*VO.class"/>
                <exclude name="**/*Test*.class"/>
            </fileset>
        </smartify>
    </target>

    <target name="with.clover">
        <clover-setup initstring="coverage.db"/>
    </target>

    <target name="report-clover" depends="with.clover">
        <clover-report>
            <current outfile="clover_html">
                <format type="html"/>
            </current>
        </clover-report>
    </target>

    <!-- =================================================================== -->
    <!-- JBOSS Demo build and deploy                                      === -->
    <!-- =================================================================== -->
    <!-- =======================================================================
    | demo-ejbdoclet :
    |   Generates all the mandatory code to deploy the EJBs of the demo.
    |   The generated classes are remote and home interfaces, and the deployment
    |   files.
    ======================================================================== -->
    <target name="demo-ejbdoclet" depends="init">
        <ejbdoclet
            destdir="${build.dir}/ejb"
            excludedtags="@version,@author,@todo"
            ejbspec="2.0"
            verbose="false"
            >

            <fileset dir="src/test">
                <include name="**/demo/**/*Bean.java"/>
                <exclude name="**/SVOTest*.java"/>
            </fileset>

            <remoteinterface/>
            <homeinterface/>
            <localinterface/>
            <localhomeinterface/>
            <deploymentdescriptor/>
            <!--                destdir="build/test/META-INF"/>-->
            <jboss
                version="3.2"
                validatexml="true"/>
            <!--                destdir="build/test/META-INF"/>-->
        </ejbdoclet>
    </target>


    <!-- =======================================================================
    | demo-compile :
    |   compile the demo sources.
    ======================================================================== -->
    <target name="demo-compile" depends="compile, init, demo-ejbdoclet, demo-hibernatedoclet">
        <javac destdir="${build.dir}/test"
            debug="${build.debug}"
            includeAntRuntime="false"
            srcdir="${src.dir}/test;${build.dir}/ejb">
            <classpath refid="demo.classpath"/>
            <include name="org/bsf/smartValueObject/demo/**"/>
            <exclude name="**/T1est*"/>
        </javac>
    </target>

    <!-- =======================================================================
    | demo-smartify :
    |   Enhance the VO of the demo.
    ======================================================================== -->
    <target name="demo-smartify" depends="demo-compile">
        <taskdef name="smartify" classname="org.bsf.smartValueObject.tools.SmartTask"
            classpathref="test.classpath"/>

        <!-- <smartify instrumentor="org.bsf.smartValueObject.tools.JavaAssistInstrumentor"> -->
        <!-- <smartify instrumentor="org.bsf.smartValueObject.tools.ASMInstrumentor"> -->
        <smartify>
            <fileset dir="${build.dir}/test">
                <include name="**/*VO.class"/>
                <exclude name="**/*Test*.class"/>
            </fileset>
        </smartify>
    </target>

    <!-- =======================================================================
    | demo-jboss-jar :
    |   makes the jar that contains the EJB to perform the tests in JBoss Server.
    ======================================================================== -->
    <target name="demo-jboss-jar" depends="demo-smartify">
        <manifest file="${build.dir}/ejb/manifest.mf">
            <attribute name="Class-Path" value="bsf-SVO-client.jar bsf-commons-ejb.jar hibernate2.jar cglib-full-2.0beta2.jar mysql-connector-java-3.0.9-stable-bin.jar odmg.jar dom4j.jar"/>
        </manifest>

        <ejbjar
            srcdir="build/test"
            descriptordir="${build.dir}/ejb"
            basejarname="${demo.jboss.name}"
            dependency="full"
            manifest="${build.dir}/ejb/manifest.mf">
            <dtd publicid="${ejb2_0.id}" location="${ejb2_0.dtd}"/>
            <jboss destdir="${dist.dir}"/>
            <include name="**/*.xml"/>
            <exclude name="**/jonas-*.xml"/>
            <exclude name="**/jboss*.xml"/>
            <exclude name="**/build.xml"/>
            <support dir="build/test">
                <include name="**/*.hbm.xml"/>
            </support>
        </ejbjar>
    </target>

    <!-- =======================================================================
    | test-client-jar :
    |   makes the jar that contains the EJB interfaces and test objects.
    ======================================================================== -->
    <target name="demo-client-jar" depends="demo-smartify">
        <jar destfile="${dist.dir}/${demo.jboss.name}-client.jar"
            basedir="build/test">
            <include name="org/bsf/smartValueObject/demo/**"/>
            <exclude name="**/*Bean.class"/>
            <exclude name="**/Test*.class"/>
            <exclude name="**/DemoMediator*.class"/>
            <exclude name="**/*Local*.class"/>
        </jar>
    </target>

    <!-- =======================================================================
    | demo-jboss-ear :
    |   Packages the test application in an EAR. Any J2EE application should
    |   use this kind of deployment.
    ======================================================================== -->
    <target name="demo-jboss-ear" depends="demo-jboss-jar">
        <ear destfile="${dist.dir}/${demo.jboss.name}.ear"
            appxml="src/metadata/SVO-jboss-demo.xml">
            <fileset dir="dist" includes="${demo.jboss.name}.jar"/>
            <fileset file="${bsf-remote-server.war}"/>
            <fileset file="${bsf-commons-ejb.jar}"/>
            <fileset file="${bsf-svo.jar}"/>

            <!-- include hibernate -->
            <fileset file="${hibernate.jar}"/>
            <fileset file="${dom4j.jar}"/>
            <fileset file="${cglib.jar}"/>
            <fileset file="${mysql-jdbc.jar}"/>
            <fileset file="${odmg.jar}"/>
        </ear>
    </target>

    <!-- =======================================================================
    | demo-jboss-deploy :
    |   Deploy the ear in JBoss using the environment variable.
    ======================================================================== -->
    <target name="demo-jboss-deploy" depends="demo-jboss-ear, demo-client-jar">
        <copy todir="${env.JBOSS_SERVER}/deploy" file="${dist.dir}/${demo.jboss.name}.ear"/>
    </target>

    <!-- =======================================================================
    | demo-jboss-undeploy :
    |   Undeploys the demo-ear
    ======================================================================== -->
    <target name="demo-jboss-undeploy">
        <delete file="${env.JBOSS_SERVER}/deploy/${demo.jboss.name}.ear"/>
    </target>

    <!-- =======================================================================
    | Test the demo :
    ======================================================================== -->
    <target name="test-demo" depends="demo-compile">
        <junit printsummary="false"
            errorProperty="test.failed"
            failureProperty="test.failed"
            fork="true"
            showoutput="true"
            >
            <classpath refid="demo.classpath"/>
            <sysproperty key="org.apache.commons.logging.Log" value="org.apache.commons.logging.impl.SimpleLog"/>

            <test name="org.bsf.smartValueObject.demo.SVODemoClient" haltonfailure="no">
                <formatter type="plain" usefile="false"/>
            </test>
        </junit>
    </target>

    <target name="demo-hibernatedoclet">
        <hibernatedoclet
            destdir="build/test"
            excludedtags="@version,@author,@todo"
            force="true"
            mergedir="build/test"
            verbose="true">

            <fileset dir="src/test">
                <include name="**/*.java"/>
            </fileset>
            <hibernate version="2.0"/>
        </hibernatedoclet>
    </target>
</project>
